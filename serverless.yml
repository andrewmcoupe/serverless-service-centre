service:
  name: service-centre-v2

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  stage: ${opt:stage, self:provider.stage}
  customersTableName: service-centre-customers-${self:custom.stage}

plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-pseudo-parameters
  - serverless-dotenv-plugin

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    CUSTOMERS_TABLE_NAME: ${self:custom.customersTableName}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource:
        - "Fn::GetAtt": [CustomersTable, Arn]

resources:
  Resources:
    CustomersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.customersTableName}
        AttributeDefinitions:
          - AttributeName: _id
            AttributeType: S
        KeySchema:
          - AttributeName: _id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST


functions:
  createCustomer:
    handler: src/handlers/customerCreate.handler
    events:
      - http:
          method: POST
          path: /customers
          cors: true

  getCustomer:
    handler: src/handlers/customersGet.handler
    events:
      - http:
          method: Get
          path: /customers/{id}
          cors: true
