service:
  name: service-centre-v2

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  stage: ${opt:stage, self:provider.stage}
  customersTableName: service-centre-customers-${self:custom.stage}

plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-pseudo-parameters
  - serverless-dotenv-plugin

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB

  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    CUSTOMERS_TABLE_NAME: ${self:custom.customersTableName}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Scan
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ CustomersTable, Arn ]

resources:
  - ${file(serverless/resources/customers-table.partial.yml)}

functions:
  - ${file(serverless/functions/customerCreate_function.partial.yml)}

  - ${file(serverless/functions/customerGet_function.partial.yml)}

  - ${file(serverless/functions/customersGet_function.partial.yml)}

  - ${file(serverless/functions/customerDelete_function.partial.yml)}

  - ${file(serverless/functions/customerUpdate_function.partial.yml)}

  - ${file(serverless/functions/historyCreate_function.partial.yml)}